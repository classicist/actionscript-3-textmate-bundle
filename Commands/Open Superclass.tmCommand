<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

#TODO: Search all compiler library paths.

SUPPORT = ENV['TM_SUPPORT_PATH']

require SUPPORT + "/lib/ui"
require SUPPORT + "/lib/textmate"
require SUPPORT + '/lib/exit_codes'

found_classes = []
STDIN.read.scan(/\bclass\b.*\bextends\b\s(\w*)/).each do | path |
	found_classes &lt;&lt; path
end

#TODO: Handle multiple matches.
TextMate.exit_show_tool_tip "Super class not correctly identified." if found_classes.size != 1

superclass = found_classes.pop()

# Search for all files in the project with the super classes name.
project_paths = []
TextMate.each_text_file do |file|
	project_paths.push(file) if file =~ /\b#{superclass}\.as/
end

if project_paths.size == 1
    TextMate.go_to :file =&gt; project_paths[0]
elsif project_paths.size &gt; 1
	indx = TextMate::UI.menu(project_paths)
	TextMate.exit_discard() if indx == nil
	TextMate.go_to :file =&gt; project_paths[indx]
else
	TextMate.exit_show_tool_tip "Superclass not found in project."
end


</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>@D</string>
	<key>name</key>
	<string>Open Superclass</string>
	<key>output</key>
	<string>discard</string>
	<key>scope</key>
	<string>source.actionscript.3</string>
	<key>uuid</key>
	<string>18FA32FA-FB74-4EB9-A0D3-8699BD77E2A2</string>
</dict>
</plist>
